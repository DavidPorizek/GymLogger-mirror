@page "/excerciselogs"
@inject Data.ApiService apiService
@using GymLogger.Shared.Models

<h3>ExcerciseLogs</h3>

@if (excerciseLogs == null || excercises == null || workoutLogs == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="@excerciseLogsModel" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <label for="excerciseid">Excercise ID</label>
        <InputSelect id="excerciseid" @bind-Value="excerciseLogsModel.ExcerciseId">
            @foreach (var excercise in excercises)
            {
                <option value="@excercise.Id">@excercise.Name</option>
            }
        </InputSelect>

        <label for="repetition">Repetitions</label>
        <InputNumber id="repetition" @bind-Value="excerciseLogsModel.Repetition" />

        <label for="series">Series</label>
        <InputNumber id="series" @bind-Value="excerciseLogsModel.Series" />

        <label for="completion">Completed?</label>
        <InputSelect id="completion" @bind-Value="@excerciseLogsModel.Completion" >
            @foreach (var completion in Enum.GetValues(typeof(Completion)))
            {
                <option value="@completion">@completion</option>
            }
        </InputSelect>

        <label for="workoutlogid">Workout Log ID</label>
        <InputSelect id="workoutlogid" @bind-Value="excerciseLogsModel.WorkoutLogId">
            @foreach (var workoutLog in workoutLogs)
            {
                <option value="@workoutLog.Id">@workoutLog.Date</option>
            }
        </InputSelect>


        <button type="submit">Submit</button>
    </EditForm>

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>ExcerciseId</th>
                <th>Repetition</th>
                <th>Series</th>
                <th>Completion</th>
                <th>WorkoutLogId</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var excerciseLog in excerciseLogs)
            {
                <tr>
                    <td>@excerciseLog.Id</td>
                    <td>@excerciseLog.ExcerciseId</td>
                    <td>@excerciseLog.Repetition</td>
                    <td>@excerciseLog.Series</td>
                    <td>@excerciseLog.Completion</td>
                    <td>@excerciseLog.WorkoutLogId</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private ExcerciseLog excerciseLogsModel = new();
    List<ExcerciseLog>? excerciseLogs;
    List<Excercise>? excercises;
    List<WorkoutLog>? workoutLogs;

    protected override async Task OnInitializedAsync()
    {
        excerciseLogs = await apiService.GetExcerciseLogsAsync();
        excercises = await apiService.GetExcercisesAsync();
        workoutLogs = await apiService.GetWorkoutLogsAsync();
    }

    private async void HandleValidSubmit()
    {
        await apiService.CreateExcerciseLogAsync(excerciseLogsModel);
    }
}